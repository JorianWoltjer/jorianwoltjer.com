# docker exec -it jw-nginx /etc/init.d/nginx reload

server {
    listen 80;
    server_name localhost nginx jorianwoltjer.com;

    proxy_set_header X-Internal "";
    proxy_set_header Host $host;

    add_header X-Frame-Options "DENY";
    add_header X-Content-Type-Options "nosniff";
    set $CSP "default-src 'self';";
    set $CSP "$CSP script-src 'self';";
    set $CSP "$CSP style-src 'self' 'unsafe-inline';";
    set $CSP "$CSP object-src 'none';";
    set $CSP "$CSP connect-src 'self' http://localhost:8000 ws://localhost:8000 wss://localhost:8000 ws://jorianwoltjer.com wss://jorianwoltjer.com;";
    set $CSP "$CSP font-src 'self' fonts.gstatic.com;";
    set $CSP "$CSP img-src 'self' data:;";
    set $CSP "$CSP frame-src www.youtube-nocookie.com;";
    set $CSP "$CSP frame-ancestors 'none';";
    add_header Content-Security-Policy $CSP;
    
    # Redirects
    
    ## /blog/p and /blog/f to /blog
    location ~ ^/blog/(p|f)$ {
        rewrite ^/blog/(p|f)$ /blog permanent;
    }
    ## /blog/post/... to /blog/p/...
    location ~ ^/blog/post/ {
        rewrite ^/blog/post/(.*)$ /blog/p/$1 permanent;
    }
    ## /blog/folder/... to /blog/f/...
    location ~ ^/blog/folder/ {
        rewrite ^/blog/folder/(.*)$ /blog/f/$1 permanent;
    }
    ## /blog/post?id=... to /blog/p/... (backwards compatibility)
    location ~ ^/blog/post {
        if ($args ~* "id=([0-9]+)") {
            set $post_id $1;
            rewrite ^/blog/post$ /blog/post/$post_id? permanent;
        }
    }
    ## /blog/folder?id=... to /blog/f/... (backwards compatibility)
    location ~ ^/blog/folder {
        if ($args ~* "id=([0-9]+)") {
            set $folder_id $1;
            rewrite ^/blog/folder$ /blog/folder/$folder_id? permanent;
        }
    }
    ## /sw to /projects/school_websites
    location ~ ^/sw$ {
        rewrite ^/sw$ /projects/school_websites permanent;
    }

    # Frontend
    location ~ ^/img/(blog|projects) {
        root /usr/share/nginx/html;

        error_page 404 = /img/placeholder.png;
    }
    location / {
        proxy_pass http://frontend;
        proxy_redirect off;
    }

    # Backend Websockets
    location = /api/blog/search {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    # Backend API
    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://backend;
        proxy_redirect off;
    }
}
